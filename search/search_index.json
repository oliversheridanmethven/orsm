{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Testing Author Dr Oliver Sheridan-Methven oliver.sheridan-methven@hotmail.co.uk . Description A collection of various code snippets designed to test various ideas and code fragments, akin to a code scratch space. Documentation The full documenation can be found here Documentation .","title":"Testing"},{"location":"index.html#testing","text":"","title":"Testing"},{"location":"index.html#author","text":"Dr Oliver Sheridan-Methven oliver.sheridan-methven@hotmail.co.uk .","title":"Author"},{"location":"index.html#description","text":"A collection of various code snippets designed to test various ideas and code fragments, akin to a code scratch space.","title":"Description"},{"location":"index.html#documentation","text":"The full documenation can be found here Documentation .","title":"Documentation"},{"location":"build/index.html","text":"Build Build Details about how to build this project.","title":"Build"},{"location":"build/index.html#build","text":"Build Details about how to build this project.","title":"Build"},{"location":"build/from_source.html","text":"Building from source Building from source Out-of-source builds Modern C23 compilers Debugging Out-of-source builds We follow the CMake convention by only encouraging \"out-of-source\" builds, hence the reason for this build directory existing. This directory exists only for manual building and testing with cmake et al. To build the project: cd build cmake .. make make test ctest Note make test and ctest are synonymous. Modern C23 compilers We are trying to use a very modern C standard (C23 is brand new at the time of writing), and compiler support for this is very limited. To ensure cmake can find a sufficiently new compiler version, it may be necessary to hard wire paths to these in your invocation of cmake , e.g.: cmake -D CMAKE_C_COMPILER=/usr/local/Cellar/gcc/13.1.0/bin/gcc-13 -D CMAKE_CXX_COMPILER=/usr/local/Cellar/gcc/13.1.0/bin/g++-13 .. Debugging If any tests are failing, then these can be debugged further by running ctest --rerun-failed --output-on-failure","title":"Building from source"},{"location":"build/from_source.html#building-from-source","text":"Building from source Out-of-source builds Modern C23 compilers Debugging","title":"Building from source"},{"location":"build/from_source.html#out-of-source-builds","text":"We follow the CMake convention by only encouraging \"out-of-source\" builds, hence the reason for this build directory existing. This directory exists only for manual building and testing with cmake et al. To build the project: cd build cmake .. make make test ctest Note make test and ctest are synonymous.","title":"Out-of-source builds"},{"location":"build/from_source.html#modern-c23-compilers","text":"We are trying to use a very modern C standard (C23 is brand new at the time of writing), and compiler support for this is very limited. To ensure cmake can find a sufficiently new compiler version, it may be necessary to hard wire paths to these in your invocation of cmake , e.g.: cmake -D CMAKE_C_COMPILER=/usr/local/Cellar/gcc/13.1.0/bin/gcc-13 -D CMAKE_CXX_COMPILER=/usr/local/Cellar/gcc/13.1.0/bin/g++-13 ..","title":"Modern C23 compilers"},{"location":"build/from_source.html#debugging","text":"If any tests are failing, then these can be debugged further by running ctest --rerun-failed --output-on-failure","title":"Debugging"},{"location":"docs/advanced.html","text":"Advanced Advanced Updating the remote documentation. Updating the remote documentation. To update the documentation hosted remotely (e.g. on GitHub Pages), then on master we need to redeploy the documents after the most relevant commit by calling: mkdocs gh-deploy --clean TODO: Git hooks I should automate this by turning this into a git hook or a github action.","title":"Advanced"},{"location":"docs/advanced.html#advanced","text":"Advanced Updating the remote documentation.","title":"Advanced"},{"location":"docs/advanced.html#updating-the-remote-documentation","text":"To update the documentation hosted remotely (e.g. on GitHub Pages), then on master we need to redeploy the documents after the most relevant commit by calling: mkdocs gh-deploy --clean TODO: Git hooks I should automate this by turning this into a git hook or a github action.","title":"Updating the remote documentation."},{"location":"docs/dependencies.html","text":"Dependencies Dependencies List of dependencies The source code The documentation Installation List of dependencies The project relies on a few dependencies, the most notable of which include: The source code GCC (with C23 and C++23 support). CMake (for building). GLIB (for logging). Argp (for the CLI). Criterion (for testing). The documentation mkdocs (for documentation). mkdocs-same-dir. mkdocs-awesome-pages-plugin. Installation Most of these can be installed either through pip or brew or similar.","title":"Dependencies"},{"location":"docs/dependencies.html#dependencies","text":"Dependencies List of dependencies The source code The documentation Installation","title":"Dependencies"},{"location":"docs/dependencies.html#list-of-dependencies","text":"The project relies on a few dependencies, the most notable of which include:","title":"List of dependencies"},{"location":"docs/dependencies.html#the-source-code","text":"GCC (with C23 and C++23 support). CMake (for building). GLIB (for logging). Argp (for the CLI). Criterion (for testing).","title":"The source code"},{"location":"docs/dependencies.html#the-documentation","text":"mkdocs (for documentation). mkdocs-same-dir. mkdocs-awesome-pages-plugin.","title":"The documentation"},{"location":"docs/dependencies.html#installation","text":"Most of these can be installed either through pip or brew or similar.","title":"Installation"},{"location":"docs/getting_started.html","text":"Getting started Here we outline how to get started. Getting started Downloading the repo Dependencies Building the latest documentation Downloading the repo To download the repo run git clone https://github.com/oliversheridanmethven/testing.git Dependencies The dependencies and details about their installation can be found in Dependencies . Building the latest documentation In the project's root directory, run: mkdocs build The documentation can now be found under site/ and opened in your browser. Alternatively, you can launch your own server by running mkdocs serve and clicking the link to the server is has created. (Typically this is e.g. http://127.0.0.1:8000/ ).","title":"Getting started"},{"location":"docs/getting_started.html#getting-started","text":"Here we outline how to get started. Getting started Downloading the repo Dependencies Building the latest documentation","title":"Getting started"},{"location":"docs/getting_started.html#downloading-the-repo","text":"To download the repo run git clone https://github.com/oliversheridanmethven/testing.git","title":"Downloading the repo"},{"location":"docs/getting_started.html#dependencies","text":"The dependencies and details about their installation can be found in Dependencies .","title":"Dependencies"},{"location":"docs/getting_started.html#building-the-latest-documentation","text":"In the project's root directory, run: mkdocs build The documentation can now be found under site/ and opened in your browser. Alternatively, you can launch your own server by running mkdocs serve and clicking the link to the server is has created. (Typically this is e.g. http://127.0.0.1:8000/ ).","title":"Building the latest documentation"},{"location":"src/index.html","text":"Src This is where we keep various the libraries.","title":"Src"},{"location":"src/index.html#src","text":"This is where we keep various the libraries.","title":"Src"},{"location":"src/cli/index.html","text":"Command line interface Command line interface This library demonstrates how to use a command line interface. The tool underlying this is the Argp library provided by GNU.","title":"Command line interface"},{"location":"src/cli/index.html#command-line-interface","text":"Command line interface This library demonstrates how to use a command line interface. The tool underlying this is the Argp library provided by GNU.","title":"Command line interface"},{"location":"src/hello_world/index.html","text":"Hello world A simple hello world program.","title":"Hello world"},{"location":"src/hello_world/index.html#hello-world","text":"A simple hello world program.","title":"Hello world"},{"location":"src/logging/index.html","text":"Logging Logging A simple logging library. This is a wrapper around the GLib library.","title":"Logging"},{"location":"src/logging/index.html#logging","text":"Logging A simple logging library. This is a wrapper around the GLib library.","title":"Logging"},{"location":"src/testing/index.html","text":"Testing Testing A library providing a unit testing framework. The underlying testing framework uses Criterion .","title":"Testing"},{"location":"src/testing/index.html#testing","text":"Testing A library providing a unit testing framework. The underlying testing framework uses Criterion .","title":"Testing"},{"location":"src/testing/tests/index.html","text":"Tests Here we provide an example of how to write unit tests.","title":"Tests"},{"location":"src/testing/tests/index.html#tests","text":"Here we provide an example of how to write unit tests.","title":"Tests"},{"location":"src/version/index.html","text":"Version Version This is a small header onlly library which can be included to retreive info about the version of this repository.","title":"Version"},{"location":"src/version/index.html#version","text":"Version This is a small header onlly library which can be included to retreive info about the version of this repository.","title":"Version"}]}